language: generic


#For Ubuntu Trusty (14.04 LTS)
sudo: required
dist: trusty

env:
  matrix:
    # We don't have to run a full matrix here, because most of the options are
    # independent. This means that we can test them together in the full build.
    # See also https://docs.travis-ci.com/user/caching/#Caches-and-build-matrices
    - xTHREADING=0 xMPI=0 xGSL=0 xLTDL=0 xREADLINE=0 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # minimal
    - xTHREADING=0 xMPI=1 xGSL=0 xLTDL=1 xREADLINE=1 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # only MPI
    - xTHREADING=1 xMPI=0 xGSL=0 xLTDL=1 xREADLINE=1 xPYTHON=0 xMUSIC=0 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # only threading
    - xTHREADING=1 xMPI=1 xGSL=1 xLTDL=1 xREADLINE=1 xPYTHON=1 xMUSIC=1 xSTATIC_ANALYSIS=1 CACHE_NAME=JOB   # full
matrix:
  # do notify immediately about it when a job of a build fails.
  fast_finish: true
cache:
  directory:
    - $HOME/.cache

before_install:
  - export SOURCEDIR=$PWD
  - cd $HOME/build
  - echo $PATH

  # update package repository status (-qq is more quiet)
  - sudo rm -rf /var/lib/apt/lists/*
  - ls /etc/apt/sources.list.d/
  - sudo apt-get update -qq

  # remove any obsolete libraries
  - sudo apt-get autoremove

  # from installation webpage http://www.nest-simulator.org/installation-2/#Standard_configuration
  - sudo apt-get install -y build-essential cmake libltdl7-dev libreadline6-dev libncurses5-dev libgsl0-dev python-all-dev python-numpy python-scipy python-matplotlib ipython

  # Install pip and cython
  - wget https://bootstrap.pypa.io/get-pip.py
  - sudo python get-pip.py
  - sudo pip install -U setuptools
  - pip install --user cython==0.23.4

  # MPI
  - sudo apt-get install -y openmpi-bin libopenmpi-dev

  # python testsuite nosetests
  - sudo apt-get install -y python-nose

  # static code analysis
  - sudo apt-get install -y vera++ pep8

  # used for building cppcheck-1.69
  - sudo apt-get install -y libpcre3 libpcre3-dev

  # process json output from github api
  - sudo apt-get install -y jq

  # Install MUSIC
  - sudo apt-get install -y python-mpi4py
  - git clone https://github.com/INCF/MUSIC.git music
  - cd music
  - ./autogen.sh
  - ./configure --prefix=$HOME/.cache/music.install
  - make
  - make install
  - cd $HOME/build

  # Go back to the NEST source code directory
  - cd $SOURCEDIR

install:
  - which cython
  - cython --version
  - which python
  - python --version
  - which pip
  - which cmake
  - cmake --version

before_script:
  - chmod +x build.sh

script:
  - set -o pipefail
  - ./build.sh 2>&1 | tee build.sh.log
  - python extras/parse_travis_log.py build.sh.log

before_deploy:
  - cd $TRAVIS_BUILD_DIR/build
  - tar -zcvf logfiles.tar.gz ./*.log
  - tar -zcvf reports.tar.gz ./reports
  - mkdir -p $TRAVIS_BUILD_DIR/build/artefacts_upload
  - mv logfiles.tar.gz $TRAVIS_BUILD_DIR/build/artefacts_upload
  - mv reports.tar.gz $TRAVIS_BUILD_DIR/build/artefacts_upload

#S3 deployment

deploy:
  provider: s3
  access_key_id:
    secure: $ARTIFACTS_KEY
  secret_access_key:
    secure: $ARTIFACTS_SECRET
  bucket: "nest-travis-artefacts"
  region: eu-central-1
  skip_cleanup: true
  on:
    repo: nest/nest-simulator
    branch: master
  local-dir: "$TRAVIS_BUILD_DIR/build/artefacts_upload"
  upload-dir: "$TRAVIS_REPO_SLUG/$TRAVIS_BUILD_NUMBER/$TRAVIS_JOB_NUMBER"
  acl: bucket_owner_full_control
